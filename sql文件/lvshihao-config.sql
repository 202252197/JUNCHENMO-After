/*
 Navicat Premium Data Transfer

 Source Server         : lvshihao
 Source Server Type    : MySQL
 Source Server Version : 80030
 Source Host           : localhost:3306
 Source Schema         : lvshihao-config

 Target Server Type    : MySQL
 Target Server Version : 80030
 File Encoding         : 65001

 Date: 06/02/2025 21:35:34
*/

SET NAMES utf8mb4;
SET FOREIGN_KEY_CHECKS = 0;

-- ----------------------------
-- Table structure for config_info
-- ----------------------------
DROP TABLE IF EXISTS `config_info`;
CREATE TABLE `config_info`  (
  `id` bigint NOT NULL AUTO_INCREMENT COMMENT 'id',
  `data_id` varchar(255) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL COMMENT 'data_id',
  `group_id` varchar(255) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NULL DEFAULT NULL,
  `content` longtext CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL COMMENT 'content',
  `md5` varchar(32) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NULL DEFAULT NULL COMMENT 'md5',
  `gmt_create` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `gmt_modified` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '修改时间',
  `src_user` text CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NULL COMMENT 'source user',
  `src_ip` varchar(50) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NULL DEFAULT NULL COMMENT 'source ip',
  `app_name` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NULL DEFAULT NULL,
  `tenant_id` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NULL DEFAULT '' COMMENT '租户字段',
  `c_desc` varchar(256) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NULL DEFAULT NULL,
  `c_use` varchar(64) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NULL DEFAULT NULL,
  `effect` varchar(64) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NULL DEFAULT NULL,
  `type` varchar(64) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NULL DEFAULT NULL,
  `c_schema` text CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NULL,
  `encrypted_data_key` text CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NULL COMMENT '秘钥',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `uk_configinfo_datagrouptenant`(`data_id` ASC, `group_id` ASC, `tenant_id` ASC) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 245 CHARACTER SET = utf8mb3 COLLATE = utf8mb3_bin COMMENT = 'config_info' ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of config_info
-- ----------------------------
INSERT INTO `config_info` VALUES (2, 'ruoyi-gateway-dev.yml', 'DEFAULT_GROUP', 'spring:\n  redis:\n    host: localhost\n    port: 6379\n    password:\n  cloud:\n    gateway:\n      discovery:\n        locator:\n          lowerCaseServiceId: true\n          enabled: true\n      routes:\n        # 认证中心\n        - id: ruoyi-auth\n          uri: lb://ruoyi-auth\n          predicates:\n            - Path=/auth/**\n          filters:\n            # 验证码处理\n            - CacheRequestFilter\n            - ValidateCodeFilter\n            - StripPrefix=1\n        # 代码生成\n        - id: ruoyi-gen\n          uri: lb://ruoyi-gen\n          predicates:\n            - Path=/code/**\n          filters:\n            - StripPrefix=1\n        # 定时任务\n        - id: ruoyi-job\n          uri: lb://ruoyi-job\n          predicates:\n            - Path=/schedule/**\n          filters:\n            - StripPrefix=1\n        # 系统模块\n        - id: ruoyi-system\n          uri: lb://ruoyi-system\n          predicates:\n            - Path=/system/**\n          filters:\n            - StripPrefix=1\n        # 文件服务\n        - id: ruoyi-file\n          uri: lb://ruoyi-file\n          predicates:\n            - Path=/file/**\n          filters:\n            - StripPrefix=1\n\n# 安全配置\nsecurity:\n  # 验证码\n  captcha:\n    enabled: true\n    type: math\n  # 防止XSS攻击\n  xss:\n    enabled: true\n    excludeUrls:\n      - /system/notice\n  # 不校验白名单\n  ignore:\n    whites:\n      - /auth/logout\n      - /auth/login\n      - /auth/register\n      - /*/v2/api-docs\n      - /csrf\n', '57cec5abd0e0a6b77d853750344a9dc0', '2020-05-14 14:17:55', '2022-09-29 02:48:32', 'nacos', '0:0:0:0:0:0:0:1', '', '', '网关模块', 'null', 'null', 'yaml', '', '');
INSERT INTO `config_info` VALUES (4, 'ruoyi-monitor-dev.yml', 'DEFAULT_GROUP', '# spring\nspring:\n  security:\n    user:\n      name: ruoyi\n      password: 123456\n  boot:\n    admin:\n      ui:\n        title: 若依服务状态监控\n', '6f122fd2bfb8d45f858e7d6529a9cd44', '2020-11-20 00:00:00', '2022-09-29 02:48:54', 'nacos', '0:0:0:0:0:0:0:1', '', '', '监控中心', 'null', 'null', 'yaml', '', '');
INSERT INTO `config_info` VALUES (6, 'ruoyi-gen-dev.yml', 'DEFAULT_GROUP', '# spring配置\nspring:\n  redis:\n    host: localhost\n    port: 6379\n    password:\n  datasource:\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://localhost:3306/ry-cloud?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8\n    username: root\n    password: password\n\n# mybatis配置\nmybatis:\n    # 搜索指定包别名\n    typeAliasesPackage: com.ruoyi.gen.domain\n    # 配置mapper的扫描，找到所有的mapper.xml映射文件\n    mapperLocations: classpath:mapper/**/*.xml\n\n# swagger配置\nswagger:\n  title: 代码生成接口文档\n  license: Powered By ruoyi\n  licenseUrl: https://ruoyi.vip\n\n# 代码生成\ngen:\n  # 作者\n  author: ruoyi\n  # 默认生成包路径 system 需改成自己的模块名称 如 system monitor tool\n  packageName: com.ruoyi.system\n  # 自动去除表前缀，默认是false\n  autoRemovePre: false\n  # 表前缀（生成类名不会包含表前缀，多个用逗号分隔）\n  tablePrefix: sys_\n', 'eb592420b3fceae1402881887b8a6a0d', '2020-11-20 00:00:00', '2022-09-29 02:49:42', 'nacos', '0:0:0:0:0:0:0:1', '', '', '代码生成', 'null', 'null', 'yaml', '', '');
INSERT INTO `config_info` VALUES (7, 'ruoyi-job-dev.yml', 'DEFAULT_GROUP', '# spring配置\nspring:\n  redis:\n    host: localhost\n    port: 6379\n    password: \n  datasource:\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://localhost:3306/ry-cloud?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8\n    username: root\n    password: password\n\n# mybatis配置\nmybatis:\n    # 搜索指定包别名\n    typeAliasesPackage: com.ruoyi.job.domain\n    # 配置mapper的扫描，找到所有的mapper.xml映射文件\n    mapperLocations: classpath:mapper/**/*.xml\n\n# swagger配置\nswagger:\n  title: 定时任务接口文档\n  license: Powered By ruoyi\n  licenseUrl: https://ruoyi.vip\n', 'edcf0e3fe13fea07b4ec08b1088f30b3', '2020-11-20 00:00:00', '2022-09-29 02:50:50', 'nacos', '0:0:0:0:0:0:0:1', '', '', '定时任务', 'null', 'null', 'yaml', '', '');
INSERT INTO `config_info` VALUES (8, 'ruoyi-file-dev.yml', 'DEFAULT_GROUP', '# 本地文件上传    \r\nfile:\r\n    domain: http://127.0.0.1:9300\r\n    path: D:/ruoyi/uploadPath\r\n    prefix: /statics\r\n\r\n# FastDFS配置\r\nfdfs:\r\n  domain: http://8.129.231.12\r\n  soTimeout: 3000\r\n  connectTimeout: 2000\r\n  trackerList: 8.129.231.12:22122\r\n\r\n# Minio配置\r\nminio:\r\n  url: http://8.129.231.12:9000\r\n  accessKey: minioadmin\r\n  secretKey: minioadmin\r\n  bucketName: test', '5382b93f3d8059d6068c0501fdd41195', '2020-11-20 00:00:00', '2020-12-21 21:01:59', NULL, '0:0:0:0:0:0:0:1', '', '', '文件服务', 'null', 'null', 'yaml', NULL, '');
INSERT INTO `config_info` VALUES (9, 'sentinel-ruoyi-gateway', 'DEFAULT_GROUP', '[\r\n    {\r\n        \"resource\": \"ruoyi-auth\",\r\n        \"count\": 500,\r\n        \"grade\": 1,\r\n        \"limitApp\": \"default\",\r\n        \"strategy\": 0,\r\n        \"controlBehavior\": 0\r\n    },\r\n	{\r\n        \"resource\": \"ruoyi-system\",\r\n        \"count\": 1000,\r\n        \"grade\": 1,\r\n        \"limitApp\": \"default\",\r\n        \"strategy\": 0,\r\n        \"controlBehavior\": 0\r\n    },\r\n	{\r\n        \"resource\": \"ruoyi-gen\",\r\n        \"count\": 200,\r\n        \"grade\": 1,\r\n        \"limitApp\": \"default\",\r\n        \"strategy\": 0,\r\n        \"controlBehavior\": 0\r\n    },\r\n	{\r\n        \"resource\": \"ruoyi-job\",\r\n        \"count\": 300,\r\n        \"grade\": 1,\r\n        \"limitApp\": \"default\",\r\n        \"strategy\": 0,\r\n        \"controlBehavior\": 0\r\n    }\r\n]', '9f3a3069261598f74220bc47958ec252', '2020-11-20 00:00:00', '2020-11-20 00:00:00', NULL, '0:0:0:0:0:0:0:1', '', '', '限流策略', 'null', 'null', 'json', NULL, '');
INSERT INTO `config_info` VALUES (19, 'jcm-system-dev.yml', 'DEFAULT_GROUP', 'spring:\n  #knife4j文档需要配置，不配置文档无法正常显示接口\n  mvc:\n    pathmatch:\n      matching-strategy: ant_path_matcher\n# spring配置\n  redis:\n    host: localhost\n    port: 6379\n  datasource:\n    type: com.alibaba.druid.pool.DruidDataSource\n    druid:\n      url: jdbc:mysql://${MYSQL_HOST:localhost}:${MYSQL_PORT:3306}/${MYSQL_DATABASE:lvshihao}?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=false&serverTimezone=GMT%2B8\n      username: ${MYSQL_USERNAME:root}\n      password: ${MYSQL_PASSWORD:lvshihao}\n      driver-class-name: com.mysql.cj.jdbc.Driver\n      # 初始化物理链接的个数\n      initial-size: 5\n      # 最大连接池数量\n      max-active: 30\n      # 最小 连接池数量\n      min-idle: 5\n      # 获取连接时最大等待时间，单位毫秒 timeout链接超时\n      max-wait: 60000\n      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒  检测非核心链接的时间\n      #既作为检测的间隔时间又作为testWhileIdel执行的依据\n      time-between-eviction-runs-millis: 60000\n      # 连接保持空闲而不被驱逐的最小时间\n      min-evictable-idle-time-millis: 30000\n      # 用来检测连接是否有效的sql，要求是一个查询语句  8小时问题 8个小时没跟mysql通信mysql会主动关闭该链接\n      validation-query: SELECT 1 FROM DUAL\n      # 建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，\n      # 如果空闲时间大于min-evictable-idle-time-millis，执行validationQuery检测连接是否有效。\n      test-while-idle: true\n      # 申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。\n      test-on-borrow: false\n      # 归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。\n      test-on-return: false\n      # 是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，\n      # 比如说oracle。在mysql下建议关闭。不是mysql端，链接端，select * from student 查询缓存\n      pool-prepared-statements: true\n      #调优相关：基本上任何一个项目的性能瓶颈 1.io 2.cpu计算量\n      # 配置监控统计拦截的filters，去掉后监控界面sql无法统计\n      filter:\n        slf4j:\n          enabled: true\n        stat:\n          enabled: true\n          merge-sql: true\n          slow-sql-millis: 300\n        wall:\n          enabled: true\n      #配置stat-view-servlet\n      stat-view-servlet:\n        enabled: true\n        login-username: admin\n        login-password: 123456\n        reset-enable: false\n      #配置web-stat-filter\n      web-stat-filter:\n        enabled: true\nknife4j:\n  enable: true\n#mybatis-plus配置\nmybatis-plus:\n  mapper-locations: classpath:mapper/*.xml\n  type-aliases-package: com.jcm.system.domain,com.jcm.system.api.domain\n  configuration:\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n  global-config:\n    db-config:\n      logic-delete-field: deleted #默认deleted\n      id-type: auto # Set ID type strategy according to your database\n      logic-delete-value: 1\n      logic-not-delete-value: 0\n\n', '9ae7d90fd9d324dd9964a8cfa4046f5d', '2024-04-01 01:57:59', '2025-01-11 07:13:40', 'nacos', '0:0:0:0:0:0:0:1', '', '', '系统模块', '', '', 'yaml', '', '');
INSERT INTO `config_info` VALUES (22, 'jcm-auth-dev.yml', 'DEFAULT_GROUP', 'spring:\n  #knife4j文档需要配置，不配置文档无法正常显示接口\n  mvc:\n    pathmatch:\n      matching-strategy: ant_path_matcher\n  redis:\n    host: localhost\n    port: 6379\nknife4j:\n  enable: true', '44e1758dccc9c949b6fbce1d3641e535', '2024-04-01 13:43:10', '2024-12-24 13:24:04', 'nacos', '0:0:0:0:0:0:0:1', '', '', '', '', '', 'yaml', '', '');
INSERT INTO `config_info` VALUES (28, 'jcm-gateway-dev.yml', 'DEFAULT_GROUP', 'spring:\n  redis:\n    host: localhost\n    port: 6379\n    password:\n  cloud:\n    gateway:\n      discovery:\n        locator:\n          lowerCaseServiceId: true\n          enabled: true\n      routes:\n        # 认证中心\n        - id: jcm-auth\n          uri: lb://jcm-auth\n          predicates:\n            - Path=/auth/**\n          filters:\n            # 验证码处理\n            - ValidateCodeFilter\n            - StripPrefix=1\n        # 系统模块\n        - id: jcm-system\n          uri: lb://jcm-system\n          predicates:\n            - Path=/system/**\n          filters:\n            - StripPrefix=1\n        - id: jcm-system-websocket\n          uri: lb:ws//jcm-system\n          predicates:\n            - Path=/system/websocket/**\n          filters:\n            - StripPrefix=1\n        # 生成模块\n        - id: jcm-system\n          uri: lb://jcm-gen\n          predicates:\n            - Path=/gen/**\n          filters:\n            - StripPrefix=1\n        # 定时任务模块\n        - id: jcm-job\n          uri: lb://jcm-job\n          predicates:\n            - Path=/job/**\n          filters:\n            - StripPrefix=1\n# 安全配置\nsecurity:\n  # 验证码\n  captcha:\n    enabled: true\n    type: math\n  # 不校验白名单\n  ignore:\n    whites:\n      - /auth/logout\n      - /auth/login\n      - /auth/register\n      - /csrf\n      - /system/websocket/**\n\n# #聚合微服务的swagger-ui的地址\nspringdoc:\n  swagger-ui:\n    urls:\n      - name: 认证管理\n        url: /auth/v3/api-docs\n      - name: 系统管理\n        url: /system/v3/api-docs', '50c6839e302fa58406ccb3346979de40', '2024-04-03 02:51:45', '2025-01-19 11:33:21', 'nacos', '0:0:0:0:0:0:0:1', '', '', '', '', '', 'yaml', '', '');
INSERT INTO `config_info` VALUES (221, 'jcm-gen-dev.yml', 'DEFAULT_GROUP', 'spring:\n  #knife4j文档需要配置，不配置文档无法正常显示接口\n  mvc:\n    pathmatch:\n      matching-strategy: ant_path_matcher\n# spring配置\n  redis:\n    host: localhost\n    port: 6379\n  datasource:\n    type: com.alibaba.druid.pool.DruidDataSource\n    druid:\n      url: jdbc:mysql://${MYSQL_HOST:localhost}:${MYSQL_PORT:3306}/${MYSQL_DATABASE:lvshihao}?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=false&serverTimezone=GMT%2B8\n      username: ${MYSQL_USERNAME:root}\n      password: ${MYSQL_PASSWORD:lvshihao}\n      driver-class-name: com.mysql.cj.jdbc.Driver\n      # 初始化物理链接的个数\n      initial-size: 5\n      # 最大连接池数量\n      max-active: 30\n      # 最小 连接池数量\n      min-idle: 5\n      # 获取连接时最大等待时间，单位毫秒 timeout链接超时\n      max-wait: 60000\n      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒  检测非核心链接的时间\n      #既作为检测的间隔时间又作为testWhileIdel执行的依据\n      time-between-eviction-runs-millis: 60000\n      # 连接保持空闲而不被驱逐的最小时间\n      min-evictable-idle-time-millis: 30000\n      # 用来检测连接是否有效的sql，要求是一个查询语句  8小时问题 8个小时没跟mysql通信mysql会主动关闭该链接\n      validation-query: SELECT 1 FROM DUAL\n      # 建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，\n      # 如果空闲时间大于min-evictable-idle-time-millis，执行validationQuery检测连接是否有效。\n      test-while-idle: true\n      # 申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。\n      test-on-borrow: false\n      # 归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。\n      test-on-return: false\n      # 是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，\n      # 比如说oracle。在mysql下建议关闭。不是mysql端，链接端，select * from student 查询缓存\n      pool-prepared-statements: true\n      #调优相关：基本上任何一个项目的性能瓶颈 1.io 2.cpu计算量\n      # 配置监控统计拦截的filters，去掉后监控界面sql无法统计\n      filter:\n        slf4j:\n          enabled: true\n        stat:\n          enabled: true\n          merge-sql: true\n          slow-sql-millis: 300\n        wall:\n          enabled: true\n      #配置stat-view-servlet\n      stat-view-servlet:\n        enabled: true\n        login-username: admin\n        login-password: 123456\n        reset-enable: false\n      #配置web-stat-filter\n      web-stat-filter:\n        enabled: true\nknife4j:\n  enable: true\n#mybatis-plus配置\nmybatis-plus:\n  configuration:\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n  global-config:\n    db-config:\n      logic-delete-field: deleted #默认deleted\n      id-type: auto # Set ID type strategy according to your database\n      logic-delete-value: 1\n      logic-not-delete-value: 0\n#mybatis配置\nmybatis:\n  mapper-locations: classpath:mapper/*.xml', '8e369ab74256e442216bb3031a738d83', '2024-12-31 11:21:12', '2025-01-05 02:48:17', 'nacos', '0:0:0:0:0:0:0:1', '', '', '', '', '', 'yaml', '', '');
INSERT INTO `config_info` VALUES (233, 'jcm-job-dev.yml', 'DEFAULT_GROUP', 'spring:\n  #knife4j文档需要配置，不配置文档无法正常显示接口\n  mvc:\n    pathmatch:\n      matching-strategy: ant_path_matcher\n# spring配置\n  redis:\n    host: localhost\n    port: 6379\n  datasource:\n    type: com.alibaba.druid.pool.DruidDataSource\n    druid:\n      url: jdbc:mysql://${MYSQL_HOST:localhost}:${MYSQL_PORT:3306}/${MYSQL_DATABASE:lvshihao}?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=false&serverTimezone=GMT%2B8\n      username: ${MYSQL_USERNAME:root}\n      password: ${MYSQL_PASSWORD:lvshihao}\n      driver-class-name: com.mysql.cj.jdbc.Driver\n      # 初始化物理链接的个数\n      initial-size: 5\n      # 最大连接池数量\n      max-active: 30\n      # 最小 连接池数量\n      min-idle: 5\n      # 获取连接时最大等待时间，单位毫秒 timeout链接超时\n      max-wait: 60000\n      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒  检测非核心链接的时间\n      #既作为检测的间隔时间又作为testWhileIdel执行的依据\n      time-between-eviction-runs-millis: 60000\n      # 连接保持空闲而不被驱逐的最小时间\n      min-evictable-idle-time-millis: 30000\n      # 用来检测连接是否有效的sql，要求是一个查询语句  8小时问题 8个小时没跟mysql通信mysql会主动关闭该链接\n      validation-query: SELECT 1 FROM DUAL\n      # 建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，\n      # 如果空闲时间大于min-evictable-idle-time-millis，执行validationQuery检测连接是否有效。\n      test-while-idle: true\n      # 申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。\n      test-on-borrow: false\n      # 归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。\n      test-on-return: false\n      # 是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，\n      # 比如说oracle。在mysql下建议关闭。不是mysql端，链接端，select * from student 查询缓存\n      pool-prepared-statements: true\n      #调优相关：基本上任何一个项目的性能瓶颈 1.io 2.cpu计算量\n      # 配置监控统计拦截的filters，去掉后监控界面sql无法统计\n      filter:\n        slf4j:\n          enabled: true\n        stat:\n          enabled: true\n          merge-sql: true\n          slow-sql-millis: 300\n        wall:\n          enabled: true\n      #配置stat-view-servlet\n      stat-view-servlet:\n        enabled: true\n        login-username: admin\n        login-password: 123456\n        reset-enable: false\n      #配置web-stat-filter\n      web-stat-filter:\n        enabled: true\nknife4j:\n  enable: true\n#mybatis-plus配置\nmybatis-plus:\n  mapper-locations: classpath:mapper/*.xml\n  type-aliases-package: com.jcm.job.domain,com.jcm.system.api.domain\n  configuration:\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n  global-config:\n    db-config:\n      logic-delete-field: deleted #默认deleted\n      id-type: auto # Set ID type strategy according to your database\n      logic-delete-value: 1\n      logic-not-delete-value: 0\n', 'd5afe9e1f4644062841ff43c6a0d49b5', '2025-01-14 03:46:54', '2025-01-14 03:57:16', 'nacos', '0:0:0:0:0:0:0:1', '', '', '', '', '', 'yaml', '', '');

-- ----------------------------
-- Table structure for config_info_aggr
-- ----------------------------
DROP TABLE IF EXISTS `config_info_aggr`;
CREATE TABLE `config_info_aggr`  (
  `id` bigint NOT NULL AUTO_INCREMENT COMMENT 'id',
  `data_id` varchar(255) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL COMMENT 'data_id',
  `group_id` varchar(255) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL COMMENT 'group_id',
  `datum_id` varchar(255) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL COMMENT 'datum_id',
  `content` longtext CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL COMMENT '内容',
  `gmt_modified` datetime NOT NULL COMMENT '修改时间',
  `app_name` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NULL DEFAULT NULL,
  `tenant_id` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NULL DEFAULT '' COMMENT '租户字段',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `uk_configinfoaggr_datagrouptenantdatum`(`data_id` ASC, `group_id` ASC, `tenant_id` ASC, `datum_id` ASC) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8mb3 COLLATE = utf8mb3_bin COMMENT = '增加租户字段' ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of config_info_aggr
-- ----------------------------

-- ----------------------------
-- Table structure for config_info_beta
-- ----------------------------
DROP TABLE IF EXISTS `config_info_beta`;
CREATE TABLE `config_info_beta`  (
  `id` bigint NOT NULL AUTO_INCREMENT COMMENT 'id',
  `data_id` varchar(255) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL COMMENT 'data_id',
  `group_id` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL COMMENT 'group_id',
  `app_name` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NULL DEFAULT NULL COMMENT 'app_name',
  `content` longtext CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL COMMENT 'content',
  `beta_ips` varchar(1024) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NULL DEFAULT NULL COMMENT 'betaIps',
  `md5` varchar(32) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NULL DEFAULT NULL COMMENT 'md5',
  `gmt_create` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `gmt_modified` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '修改时间',
  `src_user` text CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NULL COMMENT 'source user',
  `src_ip` varchar(50) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NULL DEFAULT NULL COMMENT 'source ip',
  `tenant_id` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NULL DEFAULT '' COMMENT '租户字段',
  `encrypted_data_key` text CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NULL COMMENT '秘钥',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `uk_configinfobeta_datagrouptenant`(`data_id` ASC, `group_id` ASC, `tenant_id` ASC) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8mb3 COLLATE = utf8mb3_bin COMMENT = 'config_info_beta' ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of config_info_beta
-- ----------------------------

-- ----------------------------
-- Table structure for config_info_tag
-- ----------------------------
DROP TABLE IF EXISTS `config_info_tag`;
CREATE TABLE `config_info_tag`  (
  `id` bigint NOT NULL AUTO_INCREMENT COMMENT 'id',
  `data_id` varchar(255) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL COMMENT 'data_id',
  `group_id` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL COMMENT 'group_id',
  `tenant_id` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NULL DEFAULT '' COMMENT 'tenant_id',
  `tag_id` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL COMMENT 'tag_id',
  `app_name` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NULL DEFAULT NULL COMMENT 'app_name',
  `content` longtext CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL COMMENT 'content',
  `md5` varchar(32) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NULL DEFAULT NULL COMMENT 'md5',
  `gmt_create` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `gmt_modified` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '修改时间',
  `src_user` text CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NULL COMMENT 'source user',
  `src_ip` varchar(50) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NULL DEFAULT NULL COMMENT 'source ip',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `uk_configinfotag_datagrouptenanttag`(`data_id` ASC, `group_id` ASC, `tenant_id` ASC, `tag_id` ASC) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8mb3 COLLATE = utf8mb3_bin COMMENT = 'config_info_tag' ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of config_info_tag
-- ----------------------------

-- ----------------------------
-- Table structure for config_tags_relation
-- ----------------------------
DROP TABLE IF EXISTS `config_tags_relation`;
CREATE TABLE `config_tags_relation`  (
  `id` bigint NOT NULL COMMENT 'id',
  `tag_name` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL COMMENT 'tag_name',
  `tag_type` varchar(64) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NULL DEFAULT NULL COMMENT 'tag_type',
  `data_id` varchar(255) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL COMMENT 'data_id',
  `group_id` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL COMMENT 'group_id',
  `tenant_id` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NULL DEFAULT '' COMMENT 'tenant_id',
  `nid` bigint NOT NULL AUTO_INCREMENT,
  PRIMARY KEY (`nid`) USING BTREE,
  UNIQUE INDEX `uk_configtagrelation_configidtag`(`id` ASC, `tag_name` ASC, `tag_type` ASC) USING BTREE,
  INDEX `idx_tenant_id`(`tenant_id` ASC) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8mb3 COLLATE = utf8mb3_bin COMMENT = 'config_tag_relation' ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of config_tags_relation
-- ----------------------------

-- ----------------------------
-- Table structure for group_capacity
-- ----------------------------
DROP TABLE IF EXISTS `group_capacity`;
CREATE TABLE `group_capacity`  (
  `id` bigint UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '主键ID',
  `group_id` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL DEFAULT '' COMMENT 'Group ID，空字符表示整个集群',
  `quota` int UNSIGNED NOT NULL DEFAULT 0 COMMENT '配额，0表示使用默认值',
  `usage` int UNSIGNED NOT NULL DEFAULT 0 COMMENT '使用量',
  `max_size` int UNSIGNED NOT NULL DEFAULT 0 COMMENT '单个配置大小上限，单位为字节，0表示使用默认值',
  `max_aggr_count` int UNSIGNED NOT NULL DEFAULT 0 COMMENT '聚合子配置最大个数，，0表示使用默认值',
  `max_aggr_size` int UNSIGNED NOT NULL DEFAULT 0 COMMENT '单个聚合数据的子配置大小上限，单位为字节，0表示使用默认值',
  `max_history_count` int UNSIGNED NOT NULL DEFAULT 0 COMMENT '最大变更历史数量',
  `gmt_create` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `gmt_modified` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '修改时间',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `uk_group_id`(`group_id` ASC) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8mb3 COLLATE = utf8mb3_bin COMMENT = '集群、各Group容量信息表' ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of group_capacity
-- ----------------------------

-- ----------------------------
-- Table structure for his_config_info
-- ----------------------------
DROP TABLE IF EXISTS `his_config_info`;
CREATE TABLE `his_config_info`  (
  `id` bigint UNSIGNED NOT NULL,
  `nid` bigint UNSIGNED NOT NULL AUTO_INCREMENT,
  `data_id` varchar(255) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL,
  `group_id` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL,
  `app_name` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NULL DEFAULT NULL COMMENT 'app_name',
  `content` longtext CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL,
  `md5` varchar(32) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NULL DEFAULT NULL,
  `gmt_create` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `gmt_modified` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `src_user` text CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NULL,
  `src_ip` varchar(50) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NULL DEFAULT NULL,
  `op_type` char(10) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NULL DEFAULT NULL,
  `tenant_id` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NULL DEFAULT '' COMMENT '租户字段',
  `encrypted_data_key` text CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NULL COMMENT '秘钥',
  PRIMARY KEY (`nid`) USING BTREE,
  INDEX `idx_gmt_create`(`gmt_create` ASC) USING BTREE,
  INDEX `idx_gmt_modified`(`gmt_modified` ASC) USING BTREE,
  INDEX `idx_did`(`data_id` ASC) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 240 CHARACTER SET = utf8mb3 COLLATE = utf8mb3_bin COMMENT = '多租户改造' ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of his_config_info
-- ----------------------------
INSERT INTO `his_config_info` VALUES (0, 213, 'jcm-gen-dev.yml', 'DEFAULT_GROUP', '', 'spring:\n  #knife4j文档需要配置，不配置文档无法正常显示接口\n  mvc:\n    pathmatch:\n      matching-strategy: ant_path_matcher\n# spring配置\n  redis:\n    host: localhost\n    port: 6379\n  datasource:\n    type: com.alibaba.druid.pool.DruidDataSource\n    druid:\n      url: jdbc:mysql://${MYSQL_HOST:localhost}:${MYSQL_PORT:3306}/${MYSQL_DATABASE:lvshihao}?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=false&serverTimezone=GMT%2B8\n      username: ${MYSQL_USERNAME:root}\n      password: ${MYSQL_PASSWORD:lvshihao}\n      driver-class-name: com.mysql.cj.jdbc.Driver\n      # 初始化物理链接的个数\n      initial-size: 5\n      # 最大连接池数量\n      max-active: 30\n      # 最小 连接池数量\n      min-idle: 5\n      # 获取连接时最大等待时间，单位毫秒 timeout链接超时\n      max-wait: 60000\n      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒  检测非核心链接的时间\n      #既作为检测的间隔时间又作为testWhileIdel执行的依据\n      time-between-eviction-runs-millis: 60000\n      # 连接保持空闲而不被驱逐的最小时间\n      min-evictable-idle-time-millis: 30000\n      # 用来检测连接是否有效的sql，要求是一个查询语句  8小时问题 8个小时没跟mysql通信mysql会主动关闭该链接\n      validation-query: SELECT 1 FROM DUAL\n      # 建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，\n      # 如果空闲时间大于min-evictable-idle-time-millis，执行validationQuery检测连接是否有效。\n      test-while-idle: true\n      # 申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。\n      test-on-borrow: false\n      # 归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。\n      test-on-return: false\n      # 是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，\n      # 比如说oracle。在mysql下建议关闭。不是mysql端，链接端，select * from student 查询缓存\n      pool-prepared-statements: true\n      #调优相关：基本上任何一个项目的性能瓶颈 1.io 2.cpu计算量\n      # 配置监控统计拦截的filters，去掉后监控界面sql无法统计\n      filter:\n        slf4j:\n          enabled: true\n        stat:\n          enabled: true\n          merge-sql: true\n          slow-sql-millis: 300\n        wall:\n          enabled: true\n      #配置stat-view-servlet\n      stat-view-servlet:\n        enabled: true\n        login-username: admin\n        login-password: 123456\n        reset-enable: false\n      #配置web-stat-filter\n      web-stat-filter:\n        enabled: true\nknife4j:\n  enable: true\n#mybatis-plus配置\nmybatis-plus:\n  configuration:\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n  global-config:\n    db-config:\n      logic-delete-field: deleted #默认deleted\n      id-type: auto # Set ID type strategy according to your database\n      logic-delete-value: 1\n      logic-not-delete-value: 0\n#mybatis配置\nmybatis:\n  mapper-locations: classpath:mapper/*.xml', '8e369ab74256e442216bb3031a738d83', '2024-12-31 17:22:49', '2024-12-31 09:22:49', NULL, '0:0:0:0:0:0:0:1', 'I', '', '');
INSERT INTO `his_config_info` VALUES (219, 214, 'jcm-gen-dev.yml', 'DEFAULT_GROUP', '', 'spring:\n  #knife4j文档需要配置，不配置文档无法正常显示接口\n  mvc:\n    pathmatch:\n      matching-strategy: ant_path_matcher\n# spring配置\n  redis:\n    host: localhost\n    port: 6379\n  datasource:\n    type: com.alibaba.druid.pool.DruidDataSource\n    druid:\n      url: jdbc:mysql://${MYSQL_HOST:localhost}:${MYSQL_PORT:3306}/${MYSQL_DATABASE:lvshihao}?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=false&serverTimezone=GMT%2B8\n      username: ${MYSQL_USERNAME:root}\n      password: ${MYSQL_PASSWORD:lvshihao}\n      driver-class-name: com.mysql.cj.jdbc.Driver\n      # 初始化物理链接的个数\n      initial-size: 5\n      # 最大连接池数量\n      max-active: 30\n      # 最小 连接池数量\n      min-idle: 5\n      # 获取连接时最大等待时间，单位毫秒 timeout链接超时\n      max-wait: 60000\n      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒  检测非核心链接的时间\n      #既作为检测的间隔时间又作为testWhileIdel执行的依据\n      time-between-eviction-runs-millis: 60000\n      # 连接保持空闲而不被驱逐的最小时间\n      min-evictable-idle-time-millis: 30000\n      # 用来检测连接是否有效的sql，要求是一个查询语句  8小时问题 8个小时没跟mysql通信mysql会主动关闭该链接\n      validation-query: SELECT 1 FROM DUAL\n      # 建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，\n      # 如果空闲时间大于min-evictable-idle-time-millis，执行validationQuery检测连接是否有效。\n      test-while-idle: true\n      # 申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。\n      test-on-borrow: false\n      # 归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。\n      test-on-return: false\n      # 是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，\n      # 比如说oracle。在mysql下建议关闭。不是mysql端，链接端，select * from student 查询缓存\n      pool-prepared-statements: true\n      #调优相关：基本上任何一个项目的性能瓶颈 1.io 2.cpu计算量\n      # 配置监控统计拦截的filters，去掉后监控界面sql无法统计\n      filter:\n        slf4j:\n          enabled: true\n        stat:\n          enabled: true\n          merge-sql: true\n          slow-sql-millis: 300\n        wall:\n          enabled: true\n      #配置stat-view-servlet\n      stat-view-servlet:\n        enabled: true\n        login-username: admin\n        login-password: 123456\n        reset-enable: false\n      #配置web-stat-filter\n      web-stat-filter:\n        enabled: true\nknife4j:\n  enable: true\n#mybatis-plus配置\nmybatis-plus:\n  configuration:\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n  global-config:\n    db-config:\n      logic-delete-field: deleted #默认deleted\n      id-type: auto # Set ID type strategy according to your database\n      logic-delete-value: 1\n      logic-not-delete-value: 0\n#mybatis配置\nmybatis:\n  mapper-locations: classpath:mapper/*.xml', '8e369ab74256e442216bb3031a738d83', '2024-12-31 17:23:37', '2024-12-31 09:23:38', 'nacos', '0:0:0:0:0:0:0:1', 'U', '', '');
INSERT INTO `his_config_info` VALUES (219, 215, 'jcm-gen-dev.yml', 'DEFAULT_GROUP', '', 'spring:\n  #knife4j文档需要配置，不配置文档无法正常显示接口\n  mvc:\n    pathmatch:\n      matching-strategy: ant_path_matcher', 'a6b9725f6b593ac14d8cea4b0f24c245', '2024-12-31 18:05:37', '2024-12-31 10:05:38', NULL, '0:0:0:0:0:0:0:1', 'D', '', '');
INSERT INTO `his_config_info` VALUES (0, 216, 'jcm-gen-dev.yml', 'DEFAULT_GROUP', '', 'spring:\n  #knife4j文档需要配置，不配置文档无法正常显示接口\n  mvc:\n    pathmatch:\n      matching-strategy: ant_path_matcher\n  redis:\n    host: localhost\n    port: 6379\nknife4j:\n  enable: true', '44e1758dccc9c949b6fbce1d3641e535', '2024-12-31 19:21:12', '2024-12-31 11:21:12', NULL, '0:0:0:0:0:0:0:1', 'I', '', '');
INSERT INTO `his_config_info` VALUES (221, 217, 'jcm-gen-dev.yml', 'DEFAULT_GROUP', '', 'spring:\n  #knife4j文档需要配置，不配置文档无法正常显示接口\n  mvc:\n    pathmatch:\n      matching-strategy: ant_path_matcher\n  redis:\n    host: localhost\n    port: 6379\nknife4j:\n  enable: true', '44e1758dccc9c949b6fbce1d3641e535', '2024-12-31 19:22:18', '2024-12-31 11:22:18', 'nacos', '0:0:0:0:0:0:0:1', 'U', '', '');
INSERT INTO `his_config_info` VALUES (221, 218, 'jcm-gen-dev.yml', 'DEFAULT_GROUP', '', 'spring:\n  #knife4j文档需要配置，不配置文档无法正常显示接口\n  mvc:\n    pathmatch:\n      matching-strategy: ant_path_matcher\n# spring配置\n  redis:\n    host: localhost\n    port: 6379\n  datasource:\n    type: com.alibaba.druid.pool.DruidDataSource\n    druid:\n      url: jdbc:mysql://${MYSQL_HOST:localhost}:${MYSQL_PORT:3306}/${MYSQL_DATABASE:lvshihao}?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=false&serverTimezone=GMT%2B8\n      username: ${MYSQL_USERNAME:root}\n      password: ${MYSQL_PASSWORD:lvshihao}\n      driver-class-name: com.mysql.cj.jdbc.Driver\n      # 初始化物理链接的个数\n      initial-size: 5\n      # 最大连接池数量\n      max-active: 30\n      # 最小 连接池数量\n      min-idle: 5\n      # 获取连接时最大等待时间，单位毫秒 timeout链接超时\n      max-wait: 60000\n      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒  检测非核心链接的时间\n      #既作为检测的间隔时间又作为testWhileIdel执行的依据\n      time-between-eviction-runs-millis: 60000\n      # 连接保持空闲而不被驱逐的最小时间\n      min-evictable-idle-time-millis: 30000\n      # 用来检测连接是否有效的sql，要求是一个查询语句  8小时问题 8个小时没跟mysql通信mysql会主动关闭该链接\n      validation-query: SELECT 1 FROM DUAL\n      # 建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，\n      # 如果空闲时间大于min-evictable-idle-time-millis，执行validationQuery检测连接是否有效。\n      test-while-idle: true\n      # 申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。\n      test-on-borrow: false\n      # 归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。\n      test-on-return: false\n      # 是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，\n      # 比如说oracle。在mysql下建议关闭。不是mysql端，链接端，select * from student 查询缓存\n      pool-prepared-statements: true\n      #调优相关：基本上任何一个项目的性能瓶颈 1.io 2.cpu计算量\n      # 配置监控统计拦截的filters，去掉后监控界面sql无法统计\n      filter:\n        slf4j:\n          enabled: true\n        stat:\n          enabled: true\n          merge-sql: true\n          slow-sql-millis: 300\n        wall:\n          enabled: true\n      #配置stat-view-servlet\n      stat-view-servlet:\n        enabled: true\n        login-username: admin\n        login-password: 123456\n        reset-enable: false\n      #配置web-stat-filter\n      web-stat-filter:\n        enabled: true\nknife4j:\n  enable: true\n#mybatis-plus配置\nmybatis-plus:\n  configuration:\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n  global-config:\n    db-config:\n      logic-delete-field: deleted #默认deleted\n      id-type: auto # Set ID type strategy according to your database\n      logic-delete-value: 1\n      logic-not-delete-value: 0\n#mybatis配置\nmybatis:\n  mapper-locations: classpath:mapper/*.xml', '8e369ab74256e442216bb3031a738d83', '2024-12-31 19:28:21', '2024-12-31 11:28:21', 'nacos', '0:0:0:0:0:0:0:1', 'U', '', '');
INSERT INTO `his_config_info` VALUES (28, 219, 'jcm-gateway-dev.yml', 'DEFAULT_GROUP', '', 'spring:\n  redis:\n    host: localhost\n    port: 6379\n    password:\n  cloud:\n    gateway:\n      discovery:\n        locator:\n          lowerCaseServiceId: true\n          enabled: true\n      routes:\n        # 认证中心\n        - id: ruoyi-auth\n          uri: lb://jcm-auth\n          predicates:\n            - Path=/auth/**\n          filters:\n            # 验证码处理\n            - ValidateCodeFilter\n            - StripPrefix=1\n        # 系统模块\n        - id: ruoyi-system\n          uri: lb://jcm-system\n          predicates:\n            - Path=/system/**\n          filters:\n            - StripPrefix=1\n# 安全配置\nsecurity:\n  # 验证码\n  captcha:\n    enabled: true\n    type: math\n  # 不校验白名单\n  ignore:\n    whites:\n      - /auth/logout\n      - /auth/login\n      - /auth/register\n      - /csrf\n\n# #聚合微服务的swagger-ui的地址\nspringdoc:\n  swagger-ui:\n    urls:\n      - name: 认证管理\n        url: /auth/v3/api-docs\n      - name: 系统管理\n        url: /system/v3/api-docs', '92622485453c6e2715d670676d058aea', '2024-12-31 19:31:26', '2024-12-31 11:31:27', 'nacos', '0:0:0:0:0:0:0:1', 'U', '', '');
INSERT INTO `his_config_info` VALUES (221, 220, 'jcm-gen-dev.yml', 'DEFAULT_GROUP', '', 'spring:\n# spring配置\n  redis:\n    host: localhost\n    port: 6379\n  datasource:\n    type: com.alibaba.druid.pool.DruidDataSource\n    druid:\n      url: jdbc:mysql://${MYSQL_HOST:localhost}:${MYSQL_PORT:3306}/${MYSQL_DATABASE:lvshihao}?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=false&serverTimezone=GMT%2B8\n      username: ${MYSQL_USERNAME:root}\n      password: ${MYSQL_PASSWORD:lvshihao}\n      driver-class-name: com.mysql.cj.jdbc.Driver\n      # 初始化物理链接的个数\n      initial-size: 5\n      # 最大连接池数量\n      max-active: 30\n      # 最小 连接池数量\n      min-idle: 5\n      # 获取连接时最大等待时间，单位毫秒 timeout链接超时\n      max-wait: 60000\n      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒  检测非核心链接的时间\n      #既作为检测的间隔时间又作为testWhileIdel执行的依据\n      time-between-eviction-runs-millis: 60000\n      # 连接保持空闲而不被驱逐的最小时间\n      min-evictable-idle-time-millis: 30000\n      # 用来检测连接是否有效的sql，要求是一个查询语句  8小时问题 8个小时没跟mysql通信mysql会主动关闭该链接\n      validation-query: SELECT 1 FROM DUAL\n      # 建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，\n      # 如果空闲时间大于min-evictable-idle-time-millis，执行validationQuery检测连接是否有效。\n      test-while-idle: true\n      # 申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。\n      test-on-borrow: false\n      # 归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。\n      test-on-return: false\n      # 是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，\n      # 比如说oracle。在mysql下建议关闭。不是mysql端，链接端，select * from student 查询缓存\n      pool-prepared-statements: true\n      #调优相关：基本上任何一个项目的性能瓶颈 1.io 2.cpu计算量\n      # 配置监控统计拦截的filters，去掉后监控界面sql无法统计\n      filter:\n        slf4j:\n          enabled: true\n        stat:\n          enabled: true\n          merge-sql: true\n          slow-sql-millis: 300\n        wall:\n          enabled: true\n      #配置stat-view-servlet\n      stat-view-servlet:\n        enabled: true\n        login-username: admin\n        login-password: 123456\n        reset-enable: false\n      #配置web-stat-filter\n      web-stat-filter:\n        enabled: true\n#mybatis-plus配置\nmybatis-plus:\n  configuration:\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n  global-config:\n    db-config:\n      logic-delete-field: deleted #默认deleted\n      id-type: auto # Set ID type strategy according to your database\n      logic-delete-value: 1\n      logic-not-delete-value: 0\n#mybatis配置\nmybatis:\n  mapper-locations: classpath:mapper/*.xml', '4186f274926c535daf29f247cb8e4295', '2025-01-05 10:47:51', '2025-01-05 02:47:51', 'nacos', '0:0:0:0:0:0:0:1', 'U', '', '');
INSERT INTO `his_config_info` VALUES (221, 221, 'jcm-gen-dev.yml', 'DEFAULT_GROUP', '', 'spring:\n  #knife4j文档需要配置，不配置文档无法正常显示接口\n  mvc:\n    pathmatch:\n      matching-strategy: ant_path_matcher\n# spring配置\n  redis:\n    host: localhost\n    port: 6379\n  datasource:\n    type: com.alibaba.druid.pool.DruidDataSource\n    druid:\n      url: jdbc:mysql://${MYSQL_HOST:localhost}:${MYSQL_PORT:3306}/${MYSQL_DATABASE:lvshihao}?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=false&serverTimezone=GMT%2B8\n      username: ${MYSQL_USERNAME:root}\n      password: ${MYSQL_PASSWORD:lvshihao}\n      driver-class-name: com.mysql.cj.jdbc.Driver\n      # 初始化物理链接的个数\n      initial-size: 5\n      # 最大连接池数量\n      max-active: 30\n      # 最小 连接池数量\n      min-idle: 5\n      # 获取连接时最大等待时间，单位毫秒 timeout链接超时\n      max-wait: 60000\n      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒  检测非核心链接的时间\n      #既作为检测的间隔时间又作为testWhileIdel执行的依据\n      time-between-eviction-runs-millis: 60000\n      # 连接保持空闲而不被驱逐的最小时间\n      min-evictable-idle-time-millis: 30000\n      # 用来检测连接是否有效的sql，要求是一个查询语句  8小时问题 8个小时没跟mysql通信mysql会主动关闭该链接\n      validation-query: SELECT 1 FROM DUAL\n      # 建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，\n      # 如果空闲时间大于min-evictable-idle-time-millis，执行validationQuery检测连接是否有效。\n      test-while-idle: true\n      # 申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。\n      test-on-borrow: false\n      # 归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。\n      test-on-return: false\n      # 是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，\n      # 比如说oracle。在mysql下建议关闭。不是mysql端，链接端，select * from student 查询缓存\n      pool-prepared-statements: true\n      #调优相关：基本上任何一个项目的性能瓶颈 1.io 2.cpu计算量\n      # 配置监控统计拦截的filters，去掉后监控界面sql无法统计\n      filter:\n        slf4j:\n          enabled: true\n        stat:\n          enabled: true\n          merge-sql: true\n          slow-sql-millis: 300\n        wall:\n          enabled: true\n      #配置stat-view-servlet\n      stat-view-servlet:\n        enabled: true\n        login-username: admin\n        login-password: 123456\n        reset-enable: false\n      #配置web-stat-filter\n      web-stat-filter:\n        enabled: true\n#mybatis-plus配置\nmybatis-plus:\n  configuration:\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n  global-config:\n    db-config:\n      logic-delete-field: deleted #默认deleted\n      id-type: auto # Set ID type strategy according to your database\n      logic-delete-value: 1\n      logic-not-delete-value: 0\n#mybatis配置\nmybatis:\n  mapper-locations: classpath:mapper/*.xml', 'a316a0724271c69615b84fc5a9d54f8b', '2025-01-05 10:48:17', '2025-01-05 02:48:17', 'nacos', '0:0:0:0:0:0:0:1', 'U', '', '');
INSERT INTO `his_config_info` VALUES (19, 222, 'jcm-system-dev.yml', 'DEFAULT_GROUP', '', 'spring:\n  #knife4j文档需要配置，不配置文档无法正常显示接口\n  mvc:\n    pathmatch:\n      matching-strategy: ant_path_matcher\n# spring配置\n  redis:\n    host: localhost\n    port: 6379\n  datasource:\n    type: com.alibaba.druid.pool.DruidDataSource\n    druid:\n      url: jdbc:mysql://${MYSQL_HOST:localhost}:${MYSQL_PORT:3306}/${MYSQL_DATABASE:lvshihao}?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=false&serverTimezone=GMT%2B8\n      username: ${MYSQL_USERNAME:root}\n      password: ${MYSQL_PASSWORD:lvshihao}\n      driver-class-name: com.mysql.cj.jdbc.Driver\n      # 初始化物理链接的个数\n      initial-size: 5\n      # 最大连接池数量\n      max-active: 30\n      # 最小 连接池数量\n      min-idle: 5\n      # 获取连接时最大等待时间，单位毫秒 timeout链接超时\n      max-wait: 60000\n      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒  检测非核心链接的时间\n      #既作为检测的间隔时间又作为testWhileIdel执行的依据\n      time-between-eviction-runs-millis: 60000\n      # 连接保持空闲而不被驱逐的最小时间\n      min-evictable-idle-time-millis: 30000\n      # 用来检测连接是否有效的sql，要求是一个查询语句  8小时问题 8个小时没跟mysql通信mysql会主动关闭该链接\n      validation-query: SELECT 1 FROM DUAL\n      # 建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，\n      # 如果空闲时间大于min-evictable-idle-time-millis，执行validationQuery检测连接是否有效。\n      test-while-idle: true\n      # 申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。\n      test-on-borrow: false\n      # 归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。\n      test-on-return: false\n      # 是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，\n      # 比如说oracle。在mysql下建议关闭。不是mysql端，链接端，select * from student 查询缓存\n      pool-prepared-statements: true\n      #调优相关：基本上任何一个项目的性能瓶颈 1.io 2.cpu计算量\n      # 配置监控统计拦截的filters，去掉后监控界面sql无法统计\n      filter:\n        slf4j:\n          enabled: true\n        stat:\n          enabled: true\n          merge-sql: true\n          slow-sql-millis: 300\n        wall:\n          enabled: true\n      #配置stat-view-servlet\n      stat-view-servlet:\n        enabled: true\n        login-username: admin\n        login-password: 123456\n        reset-enable: false\n      #配置web-stat-filter\n      web-stat-filter:\n        enabled: true\nknife4j:\n  enable: true\n#mybatis-plus配置\nmybatis-plus:\n  configuration:\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n  global-config:\n    db-config:\n      logic-delete-field: deleted #默认deleted\n      id-type: auto # Set ID type strategy according to your database\n      logic-delete-value: 1\n      logic-not-delete-value: 0\n#mybatis配置\nmybatis:\n  mapper-locations: classpath:mapper/*.xml', '8e369ab74256e442216bb3031a738d83', '2025-01-07 09:47:35', '2025-01-07 01:47:35', 'nacos', '0:0:0:0:0:0:0:1', 'U', '', '');
INSERT INTO `his_config_info` VALUES (19, 223, 'jcm-system-dev.yml', 'DEFAULT_GROUP', '', 'spring:\n  #knife4j文档需要配置，不配置文档无法正常显示接口\n  mvc:\n    pathmatch:\n      matching-strategy: ant_path_matcher\n# spring配置\n  redis:\n    host: localhost\n    port: 6379\n  datasource:\n    type: com.alibaba.druid.pool.DruidDataSource\n    druid:\n      url: jdbc:mysql://${MYSQL_HOST:localhost}:${MYSQL_PORT:3306}/${MYSQL_DATABASE:lvshihao}?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=false&serverTimezone=GMT%2B8\n      username: ${MYSQL_USERNAME:root}\n      password: ${MYSQL_PASSWORD:lvshihao}\n      driver-class-name: com.mysql.cj.jdbc.Driver\n      # 初始化物理链接的个数\n      initial-size: 5\n      # 最大连接池数量\n      max-active: 30\n      # 最小 连接池数量\n      min-idle: 5\n      # 获取连接时最大等待时间，单位毫秒 timeout链接超时\n      max-wait: 60000\n      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒  检测非核心链接的时间\n      #既作为检测的间隔时间又作为testWhileIdel执行的依据\n      time-between-eviction-runs-millis: 60000\n      # 连接保持空闲而不被驱逐的最小时间\n      min-evictable-idle-time-millis: 30000\n      # 用来检测连接是否有效的sql，要求是一个查询语句  8小时问题 8个小时没跟mysql通信mysql会主动关闭该链接\n      validation-query: SELECT 1 FROM DUAL\n      # 建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，\n      # 如果空闲时间大于min-evictable-idle-time-millis，执行validationQuery检测连接是否有效。\n      test-while-idle: true\n      # 申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。\n      test-on-borrow: false\n      # 归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。\n      test-on-return: false\n      # 是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，\n      # 比如说oracle。在mysql下建议关闭。不是mysql端，链接端，select * from student 查询缓存\n      pool-prepared-statements: true\n      #调优相关：基本上任何一个项目的性能瓶颈 1.io 2.cpu计算量\n      # 配置监控统计拦截的filters，去掉后监控界面sql无法统计\n      filter:\n        slf4j:\n          enabled: true\n        stat:\n          enabled: true\n          merge-sql: true\n          slow-sql-millis: 300\n        wall:\n          enabled: true\n      #配置stat-view-servlet\n      stat-view-servlet:\n        enabled: true\n        login-username: admin\n        login-password: 123456\n        reset-enable: false\n      #配置web-stat-filter\n      web-stat-filter:\n        enabled: true\nknife4j:\n  enable: true\n#mybatis-plus配置\nmybatis-plus:\n  configuration:\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n  global-config:\n    db-config:\n      logic-delete-field: deleted #默认deleted\n      id-type: auto # Set ID type strategy according to your database\n      logic-delete-value: 1\n      logic-not-delete-value: 0\n#mybatis配置\nmybatis:\n  mapper-locations: classpath:mapper/*.xml\n  type-aliases-package: com.jcm.system.domain', '0fe548db893f154fa3aff25422612bef', '2025-01-07 09:57:27', '2025-01-07 01:57:27', 'nacos', '0:0:0:0:0:0:0:1', 'U', '', '');
INSERT INTO `his_config_info` VALUES (19, 224, 'jcm-system-dev.yml', 'DEFAULT_GROUP', '', 'spring:\n  #knife4j文档需要配置，不配置文档无法正常显示接口\n  mvc:\n    pathmatch:\n      matching-strategy: ant_path_matcher\n# spring配置\n  redis:\n    host: localhost\n    port: 6379\n  datasource:\n    type: com.alibaba.druid.pool.DruidDataSource\n    druid:\n      url: jdbc:mysql://${MYSQL_HOST:localhost}:${MYSQL_PORT:3306}/${MYSQL_DATABASE:lvshihao}?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=false&serverTimezone=GMT%2B8\n      username: ${MYSQL_USERNAME:root}\n      password: ${MYSQL_PASSWORD:lvshihao}\n      driver-class-name: com.mysql.cj.jdbc.Driver\n      # 初始化物理链接的个数\n      initial-size: 5\n      # 最大连接池数量\n      max-active: 30\n      # 最小 连接池数量\n      min-idle: 5\n      # 获取连接时最大等待时间，单位毫秒 timeout链接超时\n      max-wait: 60000\n      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒  检测非核心链接的时间\n      #既作为检测的间隔时间又作为testWhileIdel执行的依据\n      time-between-eviction-runs-millis: 60000\n      # 连接保持空闲而不被驱逐的最小时间\n      min-evictable-idle-time-millis: 30000\n      # 用来检测连接是否有效的sql，要求是一个查询语句  8小时问题 8个小时没跟mysql通信mysql会主动关闭该链接\n      validation-query: SELECT 1 FROM DUAL\n      # 建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，\n      # 如果空闲时间大于min-evictable-idle-time-millis，执行validationQuery检测连接是否有效。\n      test-while-idle: true\n      # 申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。\n      test-on-borrow: false\n      # 归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。\n      test-on-return: false\n      # 是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，\n      # 比如说oracle。在mysql下建议关闭。不是mysql端，链接端，select * from student 查询缓存\n      pool-prepared-statements: true\n      #调优相关：基本上任何一个项目的性能瓶颈 1.io 2.cpu计算量\n      # 配置监控统计拦截的filters，去掉后监控界面sql无法统计\n      filter:\n        slf4j:\n          enabled: true\n        stat:\n          enabled: true\n          merge-sql: true\n          slow-sql-millis: 300\n        wall:\n          enabled: true\n      #配置stat-view-servlet\n      stat-view-servlet:\n        enabled: true\n        login-username: admin\n        login-password: 123456\n        reset-enable: false\n      #配置web-stat-filter\n      web-stat-filter:\n        enabled: true\nknife4j:\n  enable: true\n#mybatis-plus配置\nmybatis-plus:\n  mapper-locations: classpath:mapper/*.xml\n  type-aliases-package: com.jcm.system.domain\n  configuration:\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n  global-config:\n    db-config:\n      logic-delete-field: deleted #默认deleted\n      id-type: auto # Set ID type strategy according to your database\n      logic-delete-value: 1\n      logic-not-delete-value: 0\n\n', '5c2ab53f1909cb5b174124e29aa2e8b2', '2025-01-07 10:04:17', '2025-01-07 02:04:18', 'nacos', '0:0:0:0:0:0:0:1', 'U', '', '');
INSERT INTO `his_config_info` VALUES (19, 225, 'jcm-system-dev.yml', 'DEFAULT_GROUP', '', 'spring:\n  #knife4j文档需要配置，不配置文档无法正常显示接口\n  mvc:\n    pathmatch:\n      matching-strategy: ant_path_matcher\n# spring配置\n  redis:\n    host: localhost\n    port: 6379\n  datasource:\n    type: com.alibaba.druid.pool.DruidDataSource\n    druid:\n      url: jdbc:mysql://${MYSQL_HOST:localhost}:${MYSQL_PORT:3306}/${MYSQL_DATABASE:lvshihao}?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=false&serverTimezone=GMT%2B8\n      username: ${MYSQL_USERNAME:root}\n      password: ${MYSQL_PASSWORD:lvshihao}\n      driver-class-name: com.mysql.cj.jdbc.Driver\n      # 初始化物理链接的个数\n      initial-size: 5\n      # 最大连接池数量\n      max-active: 30\n      # 最小 连接池数量\n      min-idle: 5\n      # 获取连接时最大等待时间，单位毫秒 timeout链接超时\n      max-wait: 60000\n      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒  检测非核心链接的时间\n      #既作为检测的间隔时间又作为testWhileIdel执行的依据\n      time-between-eviction-runs-millis: 60000\n      # 连接保持空闲而不被驱逐的最小时间\n      min-evictable-idle-time-millis: 30000\n      # 用来检测连接是否有效的sql，要求是一个查询语句  8小时问题 8个小时没跟mysql通信mysql会主动关闭该链接\n      validation-query: SELECT 1 FROM DUAL\n      # 建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，\n      # 如果空闲时间大于min-evictable-idle-time-millis，执行validationQuery检测连接是否有效。\n      test-while-idle: true\n      # 申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。\n      test-on-borrow: false\n      # 归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。\n      test-on-return: false\n      # 是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，\n      # 比如说oracle。在mysql下建议关闭。不是mysql端，链接端，select * from student 查询缓存\n      pool-prepared-statements: true\n      #调优相关：基本上任何一个项目的性能瓶颈 1.io 2.cpu计算量\n      # 配置监控统计拦截的filters，去掉后监控界面sql无法统计\n      filter:\n        slf4j:\n          enabled: true\n        stat:\n          enabled: true\n          merge-sql: true\n          slow-sql-millis: 300\n        wall:\n          enabled: true\n      #配置stat-view-servlet\n      stat-view-servlet:\n        enabled: true\n        login-username: admin\n        login-password: 123456\n        reset-enable: false\n      #配置web-stat-filter\n      web-stat-filter:\n        enabled: true\nknife4j:\n  enable: true\n#mybatis-plus配置\nmybatis-plus:\n  mapper-locations: classpath:mapper/*.xml\n  type-aliases-package: com.jcm.system.domain,com.jcm.system.api.domain\n  configuration:\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n  global-config:\n    db-config:\n      logic-delete-field: deleted #默认deleted\n      id-type: auto # Set ID type strategy according to your database\n      logic-delete-value: 1\n      logic-not-delete-value: 0\n\n', '9ae7d90fd9d324dd9964a8cfa4046f5d', '2025-01-10 19:53:39', '2025-01-10 11:53:39', 'nacos', '0:0:0:0:0:0:0:1', 'U', '', '');
INSERT INTO `his_config_info` VALUES (19, 226, 'jcm-system-dev.yml', 'DEFAULT_GROUP', '', 'spring:\n  devtools:\n    restart:\n      #设置开启热部署\n      enabled: true\n       #重启目录\n      additional-paths: src/main/java\n      exclude: WEB-INF/**\n  #knife4j文档需要配置，不配置文档无法正常显示接口\n  mvc:\n    pathmatch:\n      matching-strategy: ant_path_matcher\n# spring配置\n  redis:\n    host: localhost\n    port: 6379\n  datasource:\n    type: com.alibaba.druid.pool.DruidDataSource\n    druid:\n      url: jdbc:mysql://${MYSQL_HOST:localhost}:${MYSQL_PORT:3306}/${MYSQL_DATABASE:lvshihao}?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=false&serverTimezone=GMT%2B8\n      username: ${MYSQL_USERNAME:root}\n      password: ${MYSQL_PASSWORD:lvshihao}\n      driver-class-name: com.mysql.cj.jdbc.Driver\n      # 初始化物理链接的个数\n      initial-size: 5\n      # 最大连接池数量\n      max-active: 30\n      # 最小 连接池数量\n      min-idle: 5\n      # 获取连接时最大等待时间，单位毫秒 timeout链接超时\n      max-wait: 60000\n      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒  检测非核心链接的时间\n      #既作为检测的间隔时间又作为testWhileIdel执行的依据\n      time-between-eviction-runs-millis: 60000\n      # 连接保持空闲而不被驱逐的最小时间\n      min-evictable-idle-time-millis: 30000\n      # 用来检测连接是否有效的sql，要求是一个查询语句  8小时问题 8个小时没跟mysql通信mysql会主动关闭该链接\n      validation-query: SELECT 1 FROM DUAL\n      # 建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，\n      # 如果空闲时间大于min-evictable-idle-time-millis，执行validationQuery检测连接是否有效。\n      test-while-idle: true\n      # 申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。\n      test-on-borrow: false\n      # 归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。\n      test-on-return: false\n      # 是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，\n      # 比如说oracle。在mysql下建议关闭。不是mysql端，链接端，select * from student 查询缓存\n      pool-prepared-statements: true\n      #调优相关：基本上任何一个项目的性能瓶颈 1.io 2.cpu计算量\n      # 配置监控统计拦截的filters，去掉后监控界面sql无法统计\n      filter:\n        slf4j:\n          enabled: true\n        stat:\n          enabled: true\n          merge-sql: true\n          slow-sql-millis: 300\n        wall:\n          enabled: true\n      #配置stat-view-servlet\n      stat-view-servlet:\n        enabled: true\n        login-username: admin\n        login-password: 123456\n        reset-enable: false\n      #配置web-stat-filter\n      web-stat-filter:\n        enabled: true\nknife4j:\n  enable: true\n#mybatis-plus配置\nmybatis-plus:\n  mapper-locations: classpath:mapper/*.xml\n  type-aliases-package: com.jcm.system.domain,com.jcm.system.api.domain\n  configuration:\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n  global-config:\n    db-config:\n      logic-delete-field: deleted #默认deleted\n      id-type: auto # Set ID type strategy according to your database\n      logic-delete-value: 1\n      logic-not-delete-value: 0\n\n', 'f4791abe56b603f770b86984c1bd2983', '2025-01-11 15:13:41', '2025-01-11 07:13:40', 'nacos', '0:0:0:0:0:0:0:1', 'U', '', '');
INSERT INTO `his_config_info` VALUES (28, 227, 'jcm-gateway-dev.yml', 'DEFAULT_GROUP', '', 'spring:\n  redis:\n    host: localhost\n    port: 6379\n    password:\n  cloud:\n    gateway:\n      discovery:\n        locator:\n          lowerCaseServiceId: true\n          enabled: true\n      routes:\n        # 认证中心\n        - id: jcm-auth\n          uri: lb://jcm-auth\n          predicates:\n            - Path=/auth/**\n          filters:\n            # 验证码处理\n            - ValidateCodeFilter\n            - StripPrefix=1\n        # 系统模块\n        - id: jcm-system\n          uri: lb://jcm-system\n          predicates:\n            - Path=/system/**\n          filters:\n            - StripPrefix=1\n        # 生成模块\n        - id: jcm-system\n          uri: lb://jcm-gen\n          predicates:\n            - Path=/gen/**\n          filters:\n            - StripPrefix=1\n# 安全配置\nsecurity:\n  # 验证码\n  captcha:\n    enabled: true\n    type: math\n  # 不校验白名单\n  ignore:\n    whites:\n      - /auth/logout\n      - /auth/login\n      - /auth/register\n      - /csrf\n\n# #聚合微服务的swagger-ui的地址\nspringdoc:\n  swagger-ui:\n    urls:\n      - name: 认证管理\n        url: /auth/v3/api-docs\n      - name: 系统管理\n        url: /system/v3/api-docs', '221752bed241ed70a7118d96fef48def', '2025-01-14 11:23:53', '2025-01-14 03:23:53', 'nacos', '0:0:0:0:0:0:0:1', 'U', '', '');
INSERT INTO `his_config_info` VALUES (0, 228, 'jcm-job-dev.yml', 'DEFAULT_GROUP', '', 'sss', '9f6e6800cfae7749eb6c486619254b9c', '2025-01-14 11:46:53', '2025-01-14 03:46:54', NULL, '0:0:0:0:0:0:0:1', 'I', '', '');
INSERT INTO `his_config_info` VALUES (233, 229, 'jcm-job-dev.yml', 'DEFAULT_GROUP', '', 'sss', '9f6e6800cfae7749eb6c486619254b9c', '2025-01-14 11:47:59', '2025-01-14 03:48:00', 'nacos', '0:0:0:0:0:0:0:1', 'U', '', '');
INSERT INTO `his_config_info` VALUES (233, 230, 'jcm-job-dev.yml', 'DEFAULT_GROUP', '', 'spring:\n  #knife4j文档需要配置，不配置文档无法正常显示接口\n  mvc:\n    pathmatch:\n      matching-strategy: ant_path_matcher\n# spring配置\n  redis:\n    host: localhost\n    port: 6379\n  datasource:\n    type: com.alibaba.druid.pool.DruidDataSource\n    druid:\n      url: jdbc:mysql://${MYSQL_HOST:localhost}:${MYSQL_PORT:3306}/${MYSQL_DATABASE:lvshihao}?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=false&serverTimezone=GMT%2B8\n      username: ${MYSQL_USERNAME:root}\n      password: ${MYSQL_PASSWORD:lvshihao}\n      driver-class-name: com.mysql.cj.jdbc.Driver\n      # 初始化物理链接的个数\n      initial-size: 5\n      # 最大连接池数量\n      max-active: 30\n      # 最小 连接池数量\n      min-idle: 5\n      # 获取连接时最大等待时间，单位毫秒 timeout链接超时\n      max-wait: 60000\n      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒  检测非核心链接的时间\n      #既作为检测的间隔时间又作为testWhileIdel执行的依据\n      time-between-eviction-runs-millis: 60000\n      # 连接保持空闲而不被驱逐的最小时间\n      min-evictable-idle-time-millis: 30000\n      # 用来检测连接是否有效的sql，要求是一个查询语句  8小时问题 8个小时没跟mysql通信mysql会主动关闭该链接\n      validation-query: SELECT 1 FROM DUAL\n      # 建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，\n      # 如果空闲时间大于min-evictable-idle-time-millis，执行validationQuery检测连接是否有效。\n      test-while-idle: true\n      # 申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。\n      test-on-borrow: false\n      # 归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。\n      test-on-return: false\n      # 是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，\n      # 比如说oracle。在mysql下建议关闭。不是mysql端，链接端，select * from student 查询缓存\n      pool-prepared-statements: true\n      #调优相关：基本上任何一个项目的性能瓶颈 1.io 2.cpu计算量\n      # 配置监控统计拦截的filters，去掉后监控界面sql无法统计\n      filter:\n        slf4j:\n          enabled: true\n        stat:\n          enabled: true\n          merge-sql: true\n          slow-sql-millis: 300\n        wall:\n          enabled: true\n      #配置stat-view-servlet\n      stat-view-servlet:\n        enabled: true\n        login-username: admin\n        login-password: 123456\n        reset-enable: false\n      #配置web-stat-filter\n      web-stat-filter:\n        enabled: true\nknife4j:\n  enable: true\n#mybatis-plus配置\nmybatis-plus:\n  configuration:\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n  global-config:\n    db-config:\n      logic-delete-field: deleted #默认deleted\n      id-type: auto # Set ID type strategy according to your database\n      logic-delete-value: 1\n      logic-not-delete-value: 0\n#mybatis配置\nmybatis:\n  mapper-locations: classpath:mapper/*.xml', '8e369ab74256e442216bb3031a738d83', '2025-01-14 11:54:08', '2025-01-14 03:54:08', 'nacos', '0:0:0:0:0:0:0:1', 'U', '', '');
INSERT INTO `his_config_info` VALUES (233, 231, 'jcm-job-dev.yml', 'DEFAULT_GROUP', '', 'spring:\n  #knife4j文档需要配置，不配置文档无法正常显示接口\n  mvc:\n    pathmatch:\n      matching-strategy: ant_path_matcher\n# spring配置\n  redis:\n    host: localhost\n    port: 6379\n  datasource:\n    type: com.alibaba.druid.pool.DruidDataSource\n    druid:\n      url: jdbc:mysql://${MYSQL_HOST:localhost}:${MYSQL_PORT:3306}/${MYSQL_DATABASE:lvshihao}?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=false&serverTimezone=GMT%2B8\n      username: ${MYSQL_USERNAME:root}\n      password: ${MYSQL_PASSWORD:lvshihao}\n      driver-class-name: com.mysql.cj.jdbc.Driver\n      # 初始化物理链接的个数\n      initial-size: 5\n      # 最大连接池数量\n      max-active: 30\n      # 最小 连接池数量\n      min-idle: 5\n      # 获取连接时最大等待时间，单位毫秒 timeout链接超时\n      max-wait: 60000\n      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒  检测非核心链接的时间\n      #既作为检测的间隔时间又作为testWhileIdel执行的依据\n      time-between-eviction-runs-millis: 60000\n      # 连接保持空闲而不被驱逐的最小时间\n      min-evictable-idle-time-millis: 30000\n      # 用来检测连接是否有效的sql，要求是一个查询语句  8小时问题 8个小时没跟mysql通信mysql会主动关闭该链接\n      validation-query: SELECT 1 FROM DUAL\n      # 建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，\n      # 如果空闲时间大于min-evictable-idle-time-millis，执行validationQuery检测连接是否有效。\n      test-while-idle: true\n      # 申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。\n      test-on-borrow: false\n      # 归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。\n      test-on-return: false\n      # 是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，\n      # 比如说oracle。在mysql下建议关闭。不是mysql端，链接端，select * from student 查询缓存\n      pool-prepared-statements: true\n      #调优相关：基本上任何一个项目的性能瓶颈 1.io 2.cpu计算量\n      # 配置监控统计拦截的filters，去掉后监控界面sql无法统计\n      filter:\n        slf4j:\n          enabled: true\n        stat:\n          enabled: true\n          merge-sql: true\n          slow-sql-millis: 300\n        wall:\n          enabled: true\n      #配置stat-view-servlet\n      stat-view-servlet:\n        enabled: true\n        login-username: admin\n        login-password: 123456\n        reset-enable: false\n      #配置web-stat-filter\n      web-stat-filter:\n        enabled: true\nknife4j:\n  enable: true\n#mybatis-plus配置\nmybatis-plus:\n  configuration:\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n  global-config:\n    db-config:\n      logic-delete-field: deleted #默认deleted\n      id-type: auto # Set ID type strategy according to your database\n      logic-delete-value: 1\n      logic-not-delete-value: 0\n#mybatis配置\nmybatis:\n  mapper-locations: classpath:mapper/*.xml', '8e369ab74256e442216bb3031a738d83', '2025-01-14 11:57:16', '2025-01-14 03:57:16', 'nacos', '0:0:0:0:0:0:0:1', 'U', '', '');
INSERT INTO `his_config_info` VALUES (28, 232, 'jcm-gateway-dev.yml', 'DEFAULT_GROUP', '', 'spring:\n  redis:\n    host: localhost\n    port: 6379\n    password:\n  cloud:\n    gateway:\n      discovery:\n        locator:\n          lowerCaseServiceId: true\n          enabled: true\n      routes:\n        # 认证中心\n        - id: jcm-auth\n          uri: lb://jcm-auth\n          predicates:\n            - Path=/auth/**\n          filters:\n            # 验证码处理\n            - ValidateCodeFilter\n            - StripPrefix=1\n        # 系统模块\n        - id: jcm-system\n          uri: lb://jcm-system\n          predicates:\n            - Path=/system/**\n          filters:\n            - StripPrefix=1\n        # 生成模块\n        - id: jcm-system\n          uri: lb://jcm-gen\n          predicates:\n            - Path=/gen/**\n          filters:\n            - StripPrefix=1\n        # 定时任务模块\n        - id: jcm-job\n          uri: lb://jcm-job\n          predicates:\n            - Path=/job/**\n          filters:\n            - StripPrefix=1\n# 安全配置\nsecurity:\n  # 验证码\n  captcha:\n    enabled: true\n    type: math\n  # 不校验白名单\n  ignore:\n    whites:\n      - /auth/logout\n      - /auth/login\n      - /auth/register\n      - /csrf\n\n# #聚合微服务的swagger-ui的地址\nspringdoc:\n  swagger-ui:\n    urls:\n      - name: 认证管理\n        url: /auth/v3/api-docs\n      - name: 系统管理\n        url: /system/v3/api-docs', '00b1f1fef2be8dfc08f0c61edaecbaa5', '2025-01-19 17:57:38', '2025-01-19 09:57:38', 'nacos', '0:0:0:0:0:0:0:1', 'U', '', '');
INSERT INTO `his_config_info` VALUES (28, 233, 'jcm-gateway-dev.yml', 'DEFAULT_GROUP', '', 'spring:\n  redis:\n    host: localhost\n    port: 6379\n    password:\n  cloud:\n    gateway:\n      discovery:\n        locator:\n          lowerCaseServiceId: true\n          enabled: true\n      routes:\n        # 认证中心\n        - id: jcm-auth\n          uri: lb://jcm-auth\n          predicates:\n            - Path=/auth/**\n          filters:\n            # 验证码处理\n            - ValidateCodeFilter\n            - StripPrefix=1\n        # 系统模块\n        - id: jcm-system\n          uri: lb://jcm-system\n          predicates:\n            - Path=/system/**\n          filters:\n            - StripPrefix=1\n        # 生成模块\n        - id: jcm-system\n          uri: lb://jcm-gen\n          predicates:\n            - Path=/gen/**\n          filters:\n            - StripPrefix=1\n        # 定时任务模块\n        - id: jcm-job\n          uri: lb://jcm-job\n          predicates:\n            - Path=/job/**\n          filters:\n            - StripPrefix=1\n# 安全配置\nsecurity:\n  # 验证码\n  captcha:\n    enabled: true\n    type: math\n  # 不校验白名单\n  ignore:\n    whites:\n      - /auth/logout\n      - /auth/login\n      - /auth/register\n      - /websocket/message\n      - /csrf\n\n# #聚合微服务的swagger-ui的地址\nspringdoc:\n  swagger-ui:\n    urls:\n      - name: 认证管理\n        url: /auth/v3/api-docs\n      - name: 系统管理\n        url: /system/v3/api-docs', 'f3f704b1778f96332149294516ed18e2', '2025-01-19 18:07:30', '2025-01-19 10:07:31', 'nacos', '0:0:0:0:0:0:0:1', 'U', '', '');
INSERT INTO `his_config_info` VALUES (28, 234, 'jcm-gateway-dev.yml', 'DEFAULT_GROUP', '', 'spring:\n  redis:\n    host: localhost\n    port: 6379\n    password:\n  cloud:\n    gateway:\n      discovery:\n        locator:\n          lowerCaseServiceId: true\n          enabled: true\n      routes:\n        # 认证中心\n        - id: jcm-auth\n          uri: lb://jcm-auth\n          predicates:\n            - Path=/auth/**\n          filters:\n            # 验证码处理\n            - ValidateCodeFilter\n            - StripPrefix=1\n        # 系统模块\n        - id: jcm-system\n          uri: lb://jcm-system\n          predicates:\n            - Path=/system/**\n          filters:\n            - StripPrefix=1\n        # 生成模块\n        - id: jcm-system\n          uri: lb://jcm-gen\n          predicates:\n            - Path=/gen/**\n          filters:\n            - StripPrefix=1\n        # 定时任务模块\n        - id: jcm-job\n          uri: lb://jcm-job\n          predicates:\n            - Path=/job/**\n          filters:\n            - StripPrefix=1\n# 安全配置\nsecurity:\n  # 验证码\n  captcha:\n    enabled: true\n    type: math\n  # 不校验白名单\n  ignore:\n    whites:\n      - /auth/logout\n      - /auth/login\n      - /auth/register\n      - /csrf\n\n# #聚合微服务的swagger-ui的地址\nspringdoc:\n  swagger-ui:\n    urls:\n      - name: 认证管理\n        url: /auth/v3/api-docs\n      - name: 系统管理\n        url: /system/v3/api-docs', '00b1f1fef2be8dfc08f0c61edaecbaa5', '2025-01-19 18:14:17', '2025-01-19 10:14:18', 'nacos', '0:0:0:0:0:0:0:1', 'U', '', '');
INSERT INTO `his_config_info` VALUES (28, 235, 'jcm-gateway-dev.yml', 'DEFAULT_GROUP', '', 'spring:\n  redis:\n    host: localhost\n    port: 6379\n    password:\n  cloud:\n    gateway:\n      discovery:\n        locator:\n          lowerCaseServiceId: true\n          enabled: true\n      routes:\n        # 认证中心\n        - id: jcm-auth\n          uri: lb://jcm-auth\n          predicates:\n            - Path=/auth/**\n          filters:\n            # 验证码处理\n            - ValidateCodeFilter\n            - StripPrefix=1\n        # 系统模块\n        - id: jcm-system\n          uri: lb://jcm-system\n          predicates:\n            - Path=/system/**\n          filters:\n            - StripPrefix=1\n        # 生成模块\n        - id: jcm-system\n          uri: lb://jcm-gen\n          predicates:\n            - Path=/gen/**\n          filters:\n            - StripPrefix=1\n        # 定时任务模块\n        - id: jcm-job\n          uri: lb://jcm-job\n          predicates:\n            - Path=/job/**\n          filters:\n            - StripPrefix=1\n# 安全配置\nsecurity:\n  # 验证码\n  captcha:\n    enabled: true\n    type: math\n  # 不校验白名单\n  ignore:\n    whites:\n      - /auth/logout\n      - /auth/login\n      - /auth/register\n      - /csrf\n      - /ws/**\n\n# #聚合微服务的swagger-ui的地址\nspringdoc:\n  swagger-ui:\n    urls:\n      - name: 认证管理\n        url: /auth/v3/api-docs\n      - name: 系统管理\n        url: /system/v3/api-docs', 'bcf688f43bddbade339153210e41d474', '2025-01-19 18:18:18', '2025-01-19 10:18:18', 'nacos', '0:0:0:0:0:0:0:1', 'U', '', '');
INSERT INTO `his_config_info` VALUES (28, 236, 'jcm-gateway-dev.yml', 'DEFAULT_GROUP', '', 'spring:\n  redis:\n    host: localhost\n    port: 6379\n    password:\n  cloud:\n    gateway:\n      discovery:\n        locator:\n          lowerCaseServiceId: true\n          enabled: true\n      routes:\n        # 认证中心\n        - id: jcm-auth\n          uri: lb://jcm-auth\n          predicates:\n            - Path=/auth/**\n          filters:\n            # 验证码处理\n            - ValidateCodeFilter\n            - StripPrefix=1\n        # 系统模块\n        - id: jcm-system\n          uri: lb://jcm-system\n          predicates:\n            - Path=/system/**\n          filters:\n            - StripPrefix=1\n        # 生成模块\n        - id: jcm-system\n          uri: lb://jcm-gen\n          predicates:\n            - Path=/gen/**\n          filters:\n            - StripPrefix=1\n        # 定时任务模块\n        - id: jcm-job\n          uri: lb://jcm-job\n          predicates:\n            - Path=/job/**\n          filters:\n            - StripPrefix=1\n# 安全配置\nsecurity:\n  # 验证码\n  captcha:\n    enabled: true\n    type: math\n  # 不校验白名单\n  ignore:\n    whites:\n      - /auth/logout\n      - /auth/login\n      - /auth/register\n      - /csrf\n      - /websocket/**\n\n# #聚合微服务的swagger-ui的地址\nspringdoc:\n  swagger-ui:\n    urls:\n      - name: 认证管理\n        url: /auth/v3/api-docs\n      - name: 系统管理\n        url: /system/v3/api-docs', '6b89a9640ef7b7e19f9b3b1861615039', '2025-01-19 18:52:43', '2025-01-19 10:52:43', 'nacos', '0:0:0:0:0:0:0:1', 'U', '', '');
INSERT INTO `his_config_info` VALUES (28, 237, 'jcm-gateway-dev.yml', 'DEFAULT_GROUP', '', 'spring:\n  redis:\n    host: localhost\n    port: 6379\n    password:\n  cloud:\n    gateway:\n      discovery:\n        locator:\n          lowerCaseServiceId: true\n          enabled: true\n      routes:\n        # 认证中心\n        - id: jcm-auth\n          uri: lb://jcm-auth\n          predicates:\n            - Path=/auth/**\n          filters:\n            # 验证码处理\n            - ValidateCodeFilter\n            - StripPrefix=1\n        # 系统模块\n        - id: jcm-system\n          uri: lb://jcm-system\n          predicates:\n            - Path=/system/**\n          filters:\n            - StripPrefix=1\n        # 生成模块\n        - id: jcm-system\n          uri: lb://jcm-gen\n          predicates:\n            - Path=/gen/**\n          filters:\n            - StripPrefix=1\n        # 定时任务模块\n        - id: jcm-job\n          uri: lb://jcm-job\n          predicates:\n            - Path=/job/**\n          filters:\n            - StripPrefix=1\n# 安全配置\nsecurity:\n  # 验证码\n  captcha:\n    enabled: true\n    type: math\n  # 不校验白名单\n  ignore:\n    whites:\n      - /auth/logout\n      - /auth/login\n      - /auth/register\n      - /csrf\n      - /system/websocket/**\n\n# #聚合微服务的swagger-ui的地址\nspringdoc:\n  swagger-ui:\n    urls:\n      - name: 认证管理\n        url: /auth/v3/api-docs\n      - name: 系统管理\n        url: /system/v3/api-docs', '1237a231e827df0d5c19081dc0c4d52f', '2025-01-19 18:59:22', '2025-01-19 10:59:23', 'nacos', '0:0:0:0:0:0:0:1', 'U', '', '');
INSERT INTO `his_config_info` VALUES (28, 238, 'jcm-gateway-dev.yml', 'DEFAULT_GROUP', '', 'spring:\n  redis:\n    host: localhost\n    port: 6379\n    password:\n  cloud:\n    gateway:\n      discovery:\n        locator:\n          lowerCaseServiceId: true\n          enabled: true\n      routes:\n        # 认证中心\n        - id: jcm-auth\n          uri: lb://jcm-auth\n          predicates:\n            - Path=/auth/**\n          filters:\n            # 验证码处理\n            - ValidateCodeFilter\n            - StripPrefix=1\n        # 系统模块\n        - id: jcm-system\n          uri: lb://jcm-system\n          predicates:\n            - Path=/system/**\n          filters:\n            - StripPrefix=1\n        - id: jcm-system-websocket\n          uri: lb:ws//jcm-system\n          predicates:\n            - Path=/system/websocket/**\n          filters:\n            - StripPrefix=1\n        # 生成模块\n        - id: jcm-system\n          uri: lb://jcm-gen\n          predicates:\n            - Path=/gen/**\n          filters:\n            - StripPrefix=1\n        # 定时任务模块\n        - id: jcm-job\n          uri: lb://jcm-job\n          predicates:\n            - Path=/job/**\n          filters:\n            - StripPrefix=1\n# 安全配置\nsecurity:\n  # 验证码\n  captcha:\n    enabled: true\n    type: math\n  # 不校验白名单\n  ignore:\n    whites:\n      - /auth/logout\n      - /auth/login\n      - /auth/register\n      - /csrf\n      - /system/websocket/**\n\n# #聚合微服务的swagger-ui的地址\nspringdoc:\n  swagger-ui:\n    urls:\n      - name: 认证管理\n        url: /auth/v3/api-docs\n      - name: 系统管理\n        url: /system/v3/api-docs', '50c6839e302fa58406ccb3346979de40', '2025-01-19 19:08:35', '2025-01-19 11:08:35', 'nacos', '0:0:0:0:0:0:0:1', 'U', '', '');
INSERT INTO `his_config_info` VALUES (28, 239, 'jcm-gateway-dev.yml', 'DEFAULT_GROUP', '', 'spring:\n  redis:\n    host: localhost\n    port: 6379\n    password:\n  cloud:\n    gateway:\n      discovery:\n        locator:\n          lowerCaseServiceId: true\n          enabled: true\n      routes:\n        # 认证中心\n        - id: jcm-auth\n          uri: lb://jcm-auth\n          predicates:\n            - Path=/auth/**\n          filters:\n            # 验证码处理\n            - ValidateCodeFilter\n            - StripPrefix=1\n        # 系统模块\n        - id: jcm-system\n          uri: lb://jcm-system\n          predicates:\n            - Path=/system/**\n          filters:\n            - StripPrefix=1\n        # 生成模块\n        - id: jcm-system\n          uri: lb://jcm-gen\n          predicates:\n            - Path=/gen/**\n          filters:\n            - StripPrefix=1\n        # 定时任务模块\n        - id: jcm-job\n          uri: lb://jcm-job\n          predicates:\n            - Path=/job/**\n          filters:\n            - StripPrefix=1\n# 安全配置\nsecurity:\n  # 验证码\n  captcha:\n    enabled: true\n    type: math\n  # 不校验白名单\n  ignore:\n    whites:\n      - /auth/logout\n      - /auth/login\n      - /auth/register\n      - /csrf\n      - /system/websocket/**\n\n# #聚合微服务的swagger-ui的地址\nspringdoc:\n  swagger-ui:\n    urls:\n      - name: 认证管理\n        url: /auth/v3/api-docs\n      - name: 系统管理\n        url: /system/v3/api-docs', '1237a231e827df0d5c19081dc0c4d52f', '2025-01-19 19:32:27', '2025-01-19 11:32:27', NULL, '0:0:0:0:0:0:0:1', 'U', '', '');
INSERT INTO `his_config_info` VALUES (28, 240, 'jcm-gateway-dev.yml', 'DEFAULT_GROUP', '', 'spring:\n  redis:\n    host: localhost\n    port: 6379\n    password:\n  cloud:\n    gateway:\n      discovery:\n        locator:\n          lowerCaseServiceId: true\n          enabled: true\n      routes:\n        # 认证中心\n        - id: jcm-auth\n          uri: lb://jcm-auth\n          predicates:\n            - Path=/auth/**\n          filters:\n            # 验证码处理\n            - ValidateCodeFilter\n            - StripPrefix=1\n        # 系统模块\n        - id: jcm-system\n          uri: lb://jcm-system\n          predicates:\n            - Path=/system/**\n          filters:\n            - StripPrefix=1\n        - id: jcm-system-websocket\n          uri: lb:ws//jcm-system\n          predicates:\n            - Path=/system/websocket/**\n          filters:\n            - StripPrefix=1\n        # 生成模块\n        - id: jcm-system\n          uri: lb://jcm-gen\n          predicates:\n            - Path=/gen/**\n          filters:\n            - StripPrefix=1\n        # 定时任务模块\n        - id: jcm-job\n          uri: lb://jcm-job\n          predicates:\n            - Path=/job/**\n          filters:\n            - StripPrefix=1\n# 安全配置\nsecurity:\n  # 验证码\n  captcha:\n    enabled: true\n    type: math\n  # 不校验白名单\n  ignore:\n    whites:\n      - /auth/logout\n      - /auth/login\n      - /auth/register\n      - /csrf\n      - /system/websocket/**\n\n# #聚合微服务的swagger-ui的地址\nspringdoc:\n  swagger-ui:\n    urls:\n      - name: 认证管理\n        url: /auth/v3/api-docs\n      - name: 系统管理\n        url: /system/v3/api-docs', '50c6839e302fa58406ccb3346979de40', '2025-01-19 19:33:21', '2025-01-19 11:33:21', 'nacos', '0:0:0:0:0:0:0:1', 'U', '', '');

-- ----------------------------
-- Table structure for permissions
-- ----------------------------
DROP TABLE IF EXISTS `permissions`;
CREATE TABLE `permissions`  (
  `role` varchar(50) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL,
  `resource` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL,
  `action` varchar(8) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL,
  UNIQUE INDEX `uk_role_permission`(`role` ASC, `resource` ASC, `action` ASC) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8mb4 COLLATE = utf8mb4_general_ci ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of permissions
-- ----------------------------

-- ----------------------------
-- Table structure for roles
-- ----------------------------
DROP TABLE IF EXISTS `roles`;
CREATE TABLE `roles`  (
  `username` varchar(50) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL,
  `role` varchar(50) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL,
  UNIQUE INDEX `idx_user_role`(`username` ASC, `role` ASC) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8mb4 COLLATE = utf8mb4_general_ci ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of roles
-- ----------------------------
INSERT INTO `roles` VALUES ('nacos', 'ROLE_ADMIN');

-- ----------------------------
-- Table structure for tenant_capacity
-- ----------------------------
DROP TABLE IF EXISTS `tenant_capacity`;
CREATE TABLE `tenant_capacity`  (
  `id` bigint UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '主键ID',
  `tenant_id` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL DEFAULT '' COMMENT 'Tenant ID',
  `quota` int UNSIGNED NOT NULL DEFAULT 0 COMMENT '配额，0表示使用默认值',
  `usage` int UNSIGNED NOT NULL DEFAULT 0 COMMENT '使用量',
  `max_size` int UNSIGNED NOT NULL DEFAULT 0 COMMENT '单个配置大小上限，单位为字节，0表示使用默认值',
  `max_aggr_count` int UNSIGNED NOT NULL DEFAULT 0 COMMENT '聚合子配置最大个数',
  `max_aggr_size` int UNSIGNED NOT NULL DEFAULT 0 COMMENT '单个聚合数据的子配置大小上限，单位为字节，0表示使用默认值',
  `max_history_count` int UNSIGNED NOT NULL DEFAULT 0 COMMENT '最大变更历史数量',
  `gmt_create` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `gmt_modified` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '修改时间',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `uk_tenant_id`(`tenant_id` ASC) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8mb3 COLLATE = utf8mb3_bin COMMENT = '租户容量信息表' ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of tenant_capacity
-- ----------------------------

-- ----------------------------
-- Table structure for tenant_info
-- ----------------------------
DROP TABLE IF EXISTS `tenant_info`;
CREATE TABLE `tenant_info`  (
  `id` bigint NOT NULL AUTO_INCREMENT COMMENT 'id',
  `kp` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL COMMENT 'kp',
  `tenant_id` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NULL DEFAULT '' COMMENT 'tenant_id',
  `tenant_name` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NULL DEFAULT '' COMMENT 'tenant_name',
  `tenant_desc` varchar(256) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NULL DEFAULT NULL COMMENT 'tenant_desc',
  `create_source` varchar(32) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NULL DEFAULT NULL COMMENT 'create_source',
  `gmt_create` bigint NOT NULL COMMENT '创建时间',
  `gmt_modified` bigint NOT NULL COMMENT '修改时间',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `uk_tenant_info_kptenantid`(`kp` ASC, `tenant_id` ASC) USING BTREE,
  INDEX `idx_tenant_id`(`tenant_id` ASC) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8mb3 COLLATE = utf8mb3_bin COMMENT = 'tenant_info' ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of tenant_info
-- ----------------------------

-- ----------------------------
-- Table structure for users
-- ----------------------------
DROP TABLE IF EXISTS `users`;
CREATE TABLE `users`  (
  `username` varchar(50) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL,
  `password` varchar(500) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL,
  `enabled` tinyint(1) NOT NULL,
  PRIMARY KEY (`username`) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8mb4 COLLATE = utf8mb4_general_ci ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of users
-- ----------------------------
INSERT INTO `users` VALUES ('nacos', '$2a$10$EuWPZHzz32dJN7jexM34MOeYirDdFAZm2kuWj7VEOJhhZkDrxfvUu', 1);

SET FOREIGN_KEY_CHECKS = 1;
